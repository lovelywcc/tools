public class DateUtil {
	private static final String DATE_FORMAT_DATETIME = "yyyy-MM-dd HH:mm:ss";
	
	public static String getDateTime(Date time){
		SimpleDateFormat sdfDateTime = new SimpleDateFormat(DATE_FORMAT_DATETIME);
		return sdfDateTime.format(time);
	}
	public static Date getDateTime(String time){
		SimpleDateFormat sdfDateTime = new SimpleDateFormat(DATE_FORMAT_DATETIME);
		Date d = null;
		try {
			d= sdfDateTime.parse(time);
		} catch (ParseException e) {
			NcLog.info(e);
			e.printStackTrace();
		}
		return d;
	}
	/** 
	   * 得到几天前的时间 
	   * @param d 
	   * @param day 
	   * @return 
	   */  
	  public static Date getDateBefore(Date d,int day){  
	   Calendar now =Calendar.getInstance();  
	   now.setTime(d);  
	   now.set(Calendar.DATE,now.get(Calendar.DATE)-day);  
	   return now.getTime();  
	  }  
	    
	  /** 
	   * 得到几天后的时间 
	   * @param d 
	   * @param day 
	   * @return 
	   */  
	  public static Date getDateAfter(Date d,int day){  
	   Calendar now =Calendar.getInstance();  
	   now.setTime(d);  
	   now.set(Calendar.DATE,now.get(Calendar.DATE)+day);  
	   return now.getTime();  
	  }  
	  /** 
	   * 得到几分钟后的时间 
	   * @param d 
	   * @param minute 
	   * @return 
	   */  
	  public static Date getDateAfterForMinute(Date d,Integer minute){  
	   Calendar now =Calendar.getInstance();  
	   now.setTime(d);  
	   now.set(Calendar.MINUTE,now.get(Calendar.MINUTE)+minute);  
	   return now.getTime();  
	  }  
	  /**
	   * 获取系统时间
	   * @return
	   */
	  public static Date getSystemTime(){
		  Date day=new Date();    
		  return day;   
	  }
	  
	  /**
	   * 日期比较大小
	   * @param DATE1
	   * @param DATE2
	   * @return
	   */
	  public static boolean compare_date(Date date1, Date date2) {
	       
	       if (date1.getTime() >= date2.getTime()) {
	           return true;
	        } else {
	           return false;
	        } 	      
	    }

	/**
	 * 将Date类型的日期转换为系统参数定义的格式的字符串。
	 *
	 * @param aTs_Datetime
	 * @param as_Pattern
	 * @return
	 */
	public static String format(Date aTs_Datetime, String as_Pattern) {
		if (aTs_Datetime == null || as_Pattern == null) {
			return null;
		}
		SimpleDateFormat dateFromat = new SimpleDateFormat();
		dateFromat.applyPattern(as_Pattern);

		return dateFromat.format(aTs_Datetime);
	}
}
